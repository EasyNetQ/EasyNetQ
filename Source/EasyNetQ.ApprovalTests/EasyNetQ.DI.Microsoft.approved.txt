namespace EasyNetQ.DI.Microsoft
{
    public class ServiceCollectionAdapter : EasyNetQ.DI.IServiceRegister
    {
        public ServiceCollectionAdapter(Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection) { }
        public Microsoft.Extensions.DependencyInjection.IServiceCollection ServiceCollection { get; }
        public EasyNetQ.DI.IServiceRegister Register(System.Type serviceType, object implementationInstance) { }
        public EasyNetQ.DI.IServiceRegister Register(System.Type serviceType, System.Func<EasyNetQ.DI.IServiceResolver, object> implementationFactory, EasyNetQ.DI.Lifetime lifetime = 1) { }
        public EasyNetQ.DI.IServiceRegister Register(System.Type serviceType, System.Type implementationType, EasyNetQ.DI.Lifetime lifetime) { }
        public EasyNetQ.DI.IServiceRegister TryRegister(System.Type serviceType, object implementationInstance) { }
        public EasyNetQ.DI.IServiceRegister TryRegister(System.Type serviceType, System.Func<EasyNetQ.DI.IServiceResolver, object> implementationFactory, EasyNetQ.DI.Lifetime lifetime = 1) { }
        public EasyNetQ.DI.IServiceRegister TryRegister(System.Type serviceType, System.Type implementationType, EasyNetQ.DI.Lifetime lifetime = 1) { }
    }
}
namespace Microsoft.Extensions.DependencyInjection
{
    public static class EasyNetQServiceCollectionExtensions
    {
        public static Microsoft.Extensions.DependencyInjection.IServiceCollection RegisterEasyNetQ(this Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection, System.Func<EasyNetQ.DI.IServiceResolver, EasyNetQ.ConnectionConfiguration> connectionConfigurationFactory) { }
        public static Microsoft.Extensions.DependencyInjection.IServiceCollection RegisterEasyNetQ(this Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection, string connectionString) { }
        public static Microsoft.Extensions.DependencyInjection.IServiceCollection RegisterEasyNetQ(this Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection, System.Func<EasyNetQ.DI.IServiceResolver, EasyNetQ.ConnectionConfiguration> connectionConfigurationFactory, System.Action<EasyNetQ.DI.IServiceRegister> registerServices) { }
        public static Microsoft.Extensions.DependencyInjection.IServiceCollection RegisterEasyNetQ(this Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection, string connectionString, System.Action<EasyNetQ.DI.IServiceRegister> registerServices) { }
    }
}