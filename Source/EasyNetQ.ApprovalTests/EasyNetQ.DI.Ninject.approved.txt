namespace EasyNetQ.DI.Ninject
{
    public class NinjectAdapter : EasyNetQ.DI.IServiceRegister
    {
        public NinjectAdapter(Ninject.IKernel kernel) { }
        public Ninject.IKernel Kernel { get; set; }
        public EasyNetQ.DI.IServiceRegister Register(System.Type serviceType, object implementationInstance) { }
        public EasyNetQ.DI.IServiceRegister Register(System.Type serviceType, System.Func<EasyNetQ.DI.IServiceResolver, object> implementationFactory, EasyNetQ.DI.Lifetime lifetime = 1) { }
        public EasyNetQ.DI.IServiceRegister Register(System.Type serviceType, System.Type implementationType, EasyNetQ.DI.Lifetime lifetime = 1) { }
        public EasyNetQ.DI.IServiceRegister TryRegister(System.Type serviceType, object implementationInstance) { }
        public EasyNetQ.DI.IServiceRegister TryRegister(System.Type serviceType, System.Func<EasyNetQ.DI.IServiceResolver, object> implementationFactory, EasyNetQ.DI.Lifetime lifetime = 1) { }
        public EasyNetQ.DI.IServiceRegister TryRegister(System.Type serviceType, System.Type implementationType, EasyNetQ.DI.Lifetime lifetime = 1) { }
    }
}
namespace Ninject
{
    public static class EasyNetQKernelExtensions
    {
        public static Ninject.IKernel RegisterEasyNetQ(this Ninject.IKernel kernel, System.Func<EasyNetQ.DI.IServiceResolver, EasyNetQ.ConnectionConfiguration> connectionConfigurationFactory) { }
        public static Ninject.IKernel RegisterEasyNetQ(this Ninject.IKernel kernel, string connectionString) { }
        public static Ninject.IKernel RegisterEasyNetQ(this Ninject.IKernel kernel, System.Func<EasyNetQ.DI.IServiceResolver, EasyNetQ.ConnectionConfiguration> connectionConfigurationFactory, System.Action<EasyNetQ.DI.IServiceRegister> registerServices) { }
        public static Ninject.IKernel RegisterEasyNetQ(this Ninject.IKernel kernel, string connectionString, System.Action<EasyNetQ.DI.IServiceRegister> registerServices) { }
    }
}