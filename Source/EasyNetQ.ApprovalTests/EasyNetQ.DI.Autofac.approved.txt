namespace Autofac
{
    public static class EasyNetQContainerBuilderExtensions
    {
        public static Autofac.ContainerBuilder RegisterEasyNetQ(this Autofac.ContainerBuilder containerBuilder, System.Func<EasyNetQ.DI.IServiceResolver, EasyNetQ.ConnectionConfiguration> connectionConfigurationFactory) { }
        public static Autofac.ContainerBuilder RegisterEasyNetQ(this Autofac.ContainerBuilder containerBuilder, string connectionString) { }
        public static Autofac.ContainerBuilder RegisterEasyNetQ(this Autofac.ContainerBuilder containerBuilder, System.Func<EasyNetQ.DI.IServiceResolver, EasyNetQ.ConnectionConfiguration> connectionConfigurationFactory, System.Action<EasyNetQ.DI.IServiceRegister> registerServices) { }
        public static Autofac.ContainerBuilder RegisterEasyNetQ(this Autofac.ContainerBuilder containerBuilder, string connectionString, System.Action<EasyNetQ.DI.IServiceRegister> registerServices) { }
    }
}
namespace EasyNetQ.DI.Autofac
{
    public class AutofacAdapter : EasyNetQ.DI.IServiceRegister
    {
        public AutofacAdapter(Autofac.ContainerBuilder containerBuilder) { }
        public EasyNetQ.DI.IServiceRegister Register(System.Type serviceType, object implementationInstance) { }
        public EasyNetQ.DI.IServiceRegister Register(System.Type serviceType, System.Func<EasyNetQ.DI.IServiceResolver, object> implementationFactory, EasyNetQ.DI.Lifetime lifetime = 1) { }
        public EasyNetQ.DI.IServiceRegister Register(System.Type serviceType, System.Type implementationType, EasyNetQ.DI.Lifetime lifetime = 1) { }
        public EasyNetQ.DI.IServiceRegister TryRegister(System.Type serviceType, object implementationInstance) { }
        public EasyNetQ.DI.IServiceRegister TryRegister(System.Type serviceType, System.Func<EasyNetQ.DI.IServiceResolver, object> implementationFactory, EasyNetQ.DI.Lifetime lifetime = 1) { }
        public EasyNetQ.DI.IServiceRegister TryRegister(System.Type serviceType, System.Type implementationType, EasyNetQ.DI.Lifetime lifetime = 1) { }
    }
}