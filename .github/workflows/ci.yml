name: CI

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop

jobs:
  build:
    name: Test
    runs-on: ubuntu-18.04
    timeout-minutes: 15
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.404

    - name: Setup Mono
      run: |
        sudo apt install gnupg ca-certificates
        sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
        echo "deb https://download.mono-project.com/repo/ubuntu stable-bionic main" | sudo tee /etc/apt/sources.list.d/mono-official-stable.list
        sudo apt update
        sudo apt install mono-devel

    - name: Patch docker connection string
      run: sed -i -e 's/http:\/\/127.0.0.1:2375/unix:\/var\/run\/docker.sock/g' ${{ github.workspace }}/Source/EasyNetQ.IntegrationTests/settings.json

    - name: Install dependencies
      run: dotnet restore ${{ github.workspace }}/Source/EasyNetQ.sln

    - name: Build
      run: msbuild ${{ github.workspace }}/Source/EasyNetQ.sln -property:Configuration=Release

    - name: Tests
      run: |
        cd ${{ github.workspace }}/Source/EasyNetQ.Tests
        dotnet test --configuration Release --no-build --framework netcoreapp3.0

    - name: DI.Tests
      run: |
        cd ${{ github.workspace }}/Source/EasyNetQ.DI.Tests
        dotnet test --configuration Release --no-build --framework netcoreapp3.0

    - name: Hosepipe.Tests
      run: |
        cd ${{ github.workspace }}/Source/EasyNetQ.Hosepipe.Tests
        dotnet test --configuration Release --no-build --filter "(Category!=Explicit)" --framework netcoreapp3.0

    - name: Integration Tests
      run: |
        cd ${{ github.workspace }}/Source/EasyNetQ.IntegrationTests
        dotnet test --configuration Release --no-build --framework netcoreapp3.0
